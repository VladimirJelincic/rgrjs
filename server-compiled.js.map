{"version":3,"sources":["server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAI,MAAI,wBAAJ;AACJ,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,QAAf,CAAR;;AAEA,IAAI,cAAJ;AACA,qBAAY,OAAZ,CAAoB,QAAQ,GAAR,CAAY,SAAZ,EAAuB,UAAC,GAAD,EAAM,QAAN,EAAmB;AAC1D,QAAG,GAAH,EAAQ,MAAM,GAAN,CAAR;AACA,SAAG,QAAH,CAF0D;AAG1D,QAAI,GAAJ,CAAQ,UAAR,EAAmB,8BAAY;AAC3B,gBAAQ,sBAAO,EAAP,CAAR;AACA,kBAAU,IAAV;KAFe,CAAnB,EAH0D;AAO1D,QAAI,MAAJ,CAAW,IAAX,EAAgB;eAAI,QAAQ,GAAR,CAAY,wBAAZ;KAAJ,CAAhB,CAP0D;CAAnB,CAA3C","file":"server-compiled.js","sourcesContent":["/**\n * Created by vladimir on 01/03/16.\n */\nimport express from \"express\";\nimport {MongoClient} from 'mongodb';\nimport schema from './data/schema';\nimport GraphQLHTTP from 'express-graphql';\n\nlet app=express();\napp.use(express.static('public'));\n\nlet db;\nMongoClient.connect(process.env.MONGO_URL, (err, database) => {\n    if(err) throw err;\n    db=database;\n    app.use('/graphql',GraphQLHTTP({\n        schema: schema(db),\n        graphiql: true\n    }))\n    app.listen(3000,()=>console.log('Listening on port 3000'));\n\n});\n/*\napp.get(\"/data/links\", (req, res) => {\n    db.collection(\"links\").find({}).toArray((err,links)=>{\n        if(err) throw err;\n        res.json(links);\n  });\n});\n*/"]}